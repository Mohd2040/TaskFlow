// ‚úÖ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÖÿ™ÿ∫Ÿäÿ±ÿßÿ™ ÿßŸÑÿ®Ÿäÿ¶Ÿäÿ©
require("dotenv").config();
// ‚úÖ ÿßÿ≥ÿ™Ÿäÿ±ÿßÿØ ÿßŸÑŸÖŸÉÿ™ÿ®ÿßÿ™
const express = require("express");
const mongoose = require("mongoose");
const path = require("path"); // üëà ŸÑÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸÖÿ≥ÿßÿ±ÿßÿ™
const app = express();
// ‚úÖ ÿßŸÑÿ•ÿπÿØÿßÿØÿßÿ™ ÿßŸÑÿπÿßŸÖÿ©
const PORT = process.env.PORT || 5000;
const MONGODB_URL = process.env.MONGODB_URL;
const authMiddleware = require("./middleware/auth");

if (!MONGODB_URL) {
  console.error("‚ùå Error: MONGODB_URL not defined in .env");
  process.exit(1); // ÿßŸÑÿÆÿ±Ÿàÿ¨ ŸÖŸÜ ÿßŸÑÿ™ÿ∑ÿ®ŸäŸÇ
}
// ‚úÖ ÿ•ÿπÿØÿßÿØ ÿßŸÑŸàÿ≥ÿ∑ÿßÿ° (Middlewares)
app.use(express.json());

// ‚úÖ ÿ™ŸÇÿØŸäŸÖ ŸÖŸÑŸÅÿßÿ™ ÿßŸÑŸàÿßÿ¨Ÿáÿ© ÿßŸÑÿ£ŸÖÿßŸÖŸäÿ© ŸÖŸÜ ŸÖÿ¨ŸÑÿØ "public"
app.use(express.static(path.join(__dirname, "./public")));
app.use(express.static('public'));
// ‚úÖ ÿ•ÿπÿØÿßÿØ ÿßŸÑŸÖÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑÿÆÿßÿµÿ© ÿ®ÿßŸÑŸÄ API
const authRoutes = require("./routes/auth");
const taskRoutes = require("./routes/tasks");

app.use("/api/users", authRoutes); // üëà ŸÖŸÅÿ™Ÿàÿ≠ ÿ®ÿØŸàŸÜ ÿ™ŸàŸÉŸÜ
app.use("/api/tasks", authMiddleware, taskRoutes); // ŸÖÿ≠ŸÖŸä ÿ®ÿßŸÑÿ™ŸàŸÉŸÜ

// ‚úÖ ÿßŸÑŸÖÿ≥ÿßÿ±ÿßÿ™ ŸÑŸÑÿµŸÅÿ≠ÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "./public/index.html"));
});

app.get("/login", (req, res) => {
  res.sendFile(path.join(__dirname, "./public/login.html"));
});

app.get("/register", (req, res) => {
  res.sendFile(path.join(__dirname, "./public/register.html"));
});

app.get("/tasks", (req, res) => {
  res.sendFile(path.join(__dirname, "./public/tasks.html"));
});

// ‚úÖ ÿßŸÑÿ™ÿπÿßŸÖŸÑ ŸÖÿπ ÿ£Ÿä ÿ±ÿßÿ®ÿ∑ ÿ∫Ÿäÿ± ŸÖÿπÿ±ŸàŸÅ (ŸäŸèÿ±ÿ≥ŸÑ ÿ•ŸÑŸâ ÿßŸÑÿµŸÅÿ≠ÿ© ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©)
app.get("*", (req, res) => {
  res.sendFile(path.join(__dirname, "./public/index.html"));
});

// ‚úÖ ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿ´ŸÖ ÿ™ÿ¥ÿ∫ŸäŸÑ ÿßŸÑÿ≥Ÿäÿ±ŸÅÿ±
mongoose
  .connect(MONGODB_URL, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  })
  .then(() => {
    console.log("‚úÖ Connected to MongoDB Atlas");

    app.listen(PORT, () => {
      console.log(`üöÄ Server is running on http://localhost:${PORT}`);
    });
  })
  .catch((err) => {
    console.error("‚ùå MongoDB connection failed:", err.message);
    process.exit(1);
  });
